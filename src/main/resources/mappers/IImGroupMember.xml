<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="fun.billon.im.rest.dao.IImGroupMemberDAO">

    <!-- 插入群组成员 -->
    <insert id="insertImGroupMember" parameterType="fun.billon.im.api.model.ImGroupMemberModel">
        INSERT INTO im_group_member(uid, group_id, nickname, avatar, is_owner)
        VALUES (#{uid}, #{groupId}, #{nickname}, #{avatar}, #{isOwner})
    </insert>

    <!-- 根据主键删除群组成员 -->
    <delete id="deleteImGroupMemberByPK" parameterType="fun.billon.im.api.model.ImGroupMemberModel">
        DELETE FROM im_group_member
        <where>
            id = #{id}
            AND group_id = #{groupId}
            <if test="uid > 0">
                AND uid = #{uid}
            </if>
        </where>
    </delete>

    <!-- 根据主键更新群组用户信息 -->
    <delete id="updateImGroupMemberByPK" parameterType="fun.billon.im.api.model.ImGroupMemberModel">
        UPDATE im_group_member
        <set>
            update_time = NOW(),
            <if test="nickname != null">
                nickname = #{nickname},
            </if>
            <if test="avatar != null">
                avatar = #{avatar},
            </if>
        </set>
        <where>
            id = #{id}
            AND group_id = #{groupId}
            <if test="uid > 0">
                AND uid = #{uid}
            </if>
        </where>
    </delete>

    <!-- 根据条件获取群组用户id -->
    <select id="queryPKByCriteria" parameterType="fun.billon.im.api.model.ImGroupMemberModel"
            resultType="Integer">
        SELECT id FROM im_group_member
        <where>
            group_id = #{groupId}
            AND uid = #{uid}
        </where>
    </select>

    <!-- 根据条件获取群组用户id列表 -->
    <select id="queryPKListByCriteria" parameterType="fun.billon.im.api.model.ImGroupMemberModel"
            resultType="Integer">
        SELECT id FROM im_group_member
        <where>
            <if test="groupId > 0">
                group_id = #{groupId}
            </if>
        </where>
        ORDER BY id DESC
        LIMIT ${(pageIndex -1) * pageSize},${pageSize}
    </select>

    <!-- 根据主键获取群组成员信息 -->
    <select id="queryImGroupMemberByPK" parameterType="fun.billon.im.api.model.ImGroupMemberModel"
            resultMap="resultImGroupMember">
        SELECT
        <include refid="imGroupMemberMapping"/>
        FROM im_group_member
        <where>
            id = #{id}
        </where>
    </select>

    <!-- 根据条件获取群组id列表 -->
    <select id="queryGroupIdListByCriteria" parameterType="fun.billon.im.api.model.ImGroupMemberModel"
            resultType="Integer">
        SELECT group_id FROM im_group_member
        <where>
            <if test="uid > 0">
                uid = #{uid}
            </if>
        </where>
        ORDER BY group_id DESC
        LIMIT ${(pageIndex -1) * pageSize},${pageSize}
    </select>

    <!-- 查询字段映射begin -->
    <!-- 群组用户信息查询字段映射(im_group_member) -->
    <sql id="imGroupMemberMapping">
        id,uid,group_id,nickname,avatar,is_owner,create_time,update_time
    </sql>
    <!-- 查询字段映射end -->

    <!-- 查询结果映射begin -->
    <!-- 群组用户查询结果映射 -->
    <resultMap id="resultImGroupMember" type="fun.billon.im.api.model.ImGroupMemberModel">
        <id property="id" column="id"/>
        <result property="uid" column="uid"/>
        <result property="groupId" column="group_id"/>
        <result property="nickname" column="nickname"/>
        <result property="avatar" column="avatar"/>
        <result property="isOwner" column="is_owner"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>
    <!-- 查询结果映射end -->

</mapper>
		